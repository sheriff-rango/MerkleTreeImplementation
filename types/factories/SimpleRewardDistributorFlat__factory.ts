/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleRewardDistributorFlat,
  SimpleRewardDistributorFlatInterface,
} from "../SimpleRewardDistributorFlat";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516109923803806109928339818101604052604081101561003357600080fd5b508051602090910151606082901b6001600160601b03191660805260a08190526001600160a01b039091169061090c6100866000398061024952806103e95250806102ba5280610425525061090c6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e7ba6ef146100515780632eb4a7ab146100df5780639e34070f146100f9578063fc0c546a1461012a575b600080fd5b6100dd6004803603608081101561006757600080fd5b8135916001600160a01b03602082013516916040820135919081019060808101606082013564010000000081111561009e57600080fd5b8201836020820111156100b057600080fd5b803590602001918460208302840111640100000000831117156100d257600080fd5b50909250905061014e565b005b6100e76103e7565b60408051918252519081900360200190f35b6101166004803603602081101561010f57600080fd5b503561040b565b604080519115158252519081900360200190f35b610132610423565b604080516001600160a01b039092168252519081900360200190f35b6101578561040b565b156101935760405162461bcd60e51b815260040180806020018281038252602881526020018061086b6028913960400191505060405180910390fd5b60606101a0868686610447565b90506000816040516020018082805190602001908083835b602083106101d75780518252601f1990920191602091820191016101b8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506102748484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506104939050565b6102af5760405162461bcd60e51b81526004018080602001828103825260218152602001806108936021913960400191505060405180910390fd5b6102b88761053c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb87876040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561032f57600080fd5b505af1158015610343573d6000803e3d6000fd5b505050506040513d602081101561035957600080fd5b50516103965760405162461bcd60e51b81526004018080602001828103825260238152602001806108b46023913960400191505060405180910390fd5b604080518881526001600160a01b038816602082015280820187905290517f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed0269181900360600190a150505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008181526020819052604090205460ff165b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60608061045385610557565b905060606104608561062f565b9050606061046d85610557565b9050606061047b84846107af565b905061048781836107af565b98975050505050505050565b600081815b85518110156105315760008682815181106104af57fe5b602002602001015190508083116104f65782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610528565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101610498565b509092149392505050565b6000908152602081905260409020805460ff19166001179055565b60608161057c57506040805180820190915260018152600360fc1b602082015261041e565b8160005b811561059457600101600a82049150610580565b60608167ffffffffffffffff811180156105ad57600080fd5b506040519080825280601f01601f1916602001820160405280156105d8576020820181803683370190505b50905060001982015b851561062657600a860660300160f81b8282806001900393508151811061060457fe5b60200101906001600160f81b031916908160001a905350600a860495506105e1565b50949350505050565b604080518082018252601081527f303132333435363738396162636465660000000000000000000000000000000060208201528151602a80825260608281019094526001600160a01b03851692918491602082018180368337019050509050600360fc1b816000815181106106a057fe5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106106c957fe5b60200101906001600160f81b031916908160001a90535060005b6014811015610626578260048583600c01602081106106fe57fe5b1a60f81b6001600160f81b031916901c60f81c60ff168151811061071e57fe5b602001015160f81c60f81b82826002026002018151811061073b57fe5b60200101906001600160f81b031916908160001a905350828482600c016020811061076257fe5b825191901a600f1690811061077357fe5b602001015160f81c60f81b82826002026003018151811061079057fe5b60200101906001600160f81b031916908160001a9053506001016106e3565b606082826040516020018083805190602001908083835b602083106107e55780518252601f1990920191602091820191016107c6565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b6020831061082d5780518252601f19909201916020918201910161080e565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405290509291505056fe4d65726b6c654469737472696275746f723a2044726f7020616c726561647920636c61696d65642e4d65726b6c654469737472696275746f723a20496e76616c69642070726f6f662e4d65726b6c654469737472696275746f723a205472616e73666572206661696c65642ea2646970667358221220dcc008ce8a73accf63b34ce6f3bb97a78f8a3a041e8261bb061d92b6d60622a664736f6c63430007000033";

type SimpleRewardDistributorFlatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleRewardDistributorFlatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleRewardDistributorFlat__factory extends ContractFactory {
  constructor(...args: SimpleRewardDistributorFlatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SimpleRewardDistributorFlat";
  }

  deploy(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleRewardDistributorFlat> {
    return super.deploy(
      token_,
      merkleRoot_,
      overrides || {}
    ) as Promise<SimpleRewardDistributorFlat>;
  }
  getDeployTransaction(
    token_: string,
    merkleRoot_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, merkleRoot_, overrides || {});
  }
  attach(address: string): SimpleRewardDistributorFlat {
    return super.attach(address) as SimpleRewardDistributorFlat;
  }
  connect(signer: Signer): SimpleRewardDistributorFlat__factory {
    return super.connect(signer) as SimpleRewardDistributorFlat__factory;
  }
  static readonly contractName: "SimpleRewardDistributorFlat";
  public readonly contractName: "SimpleRewardDistributorFlat";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleRewardDistributorFlatInterface {
    return new utils.Interface(_abi) as SimpleRewardDistributorFlatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleRewardDistributorFlat {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleRewardDistributorFlat;
  }
}
